name: Fetch Real Conservation Area Boundaries

on:
  # Run on push to main branch when the fetch script changes
  push:
    branches:
      - main
    paths:
      - 'scripts/fetch-all-real-boundaries.cjs'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update all sites (including those with high quality data)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'
  
  # Run weekly to check for boundary updates from government APIs
  schedule:
    - cron: '0 2 * * 1' # Every Monday at 2 AM UTC

jobs:
  fetch-boundaries:
    runs-on: ubuntu-latest
    name: Fetch Real Boundary Data
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Fetch real boundaries from government APIs
        run: node scripts/fetch-all-real-boundaries.cjs
        env:
          NODE_ENV: production
      
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code public/data/sites/*.json || echo "changes=true" >> $GITHUB_OUTPUT
      
      - name: Commit and push changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/data/sites/*.json
          git commit -m "chore: update conservation sites with real boundary data [automated]"
          git push
      
      - name: Generate summary
        run: |
          echo "## Boundary Data Fetch Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Boundary fetch completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Count sites with high quality data
          high_quality_count=$(find public/data/sites -name "*.json" -type f -exec grep -l '"dataQuality": "high"' {} \; | wc -l)
          medium_quality_count=$(find public/data/sites -name "*.json" -type f -exec grep -l '"dataQuality": "medium"' {} \; | wc -l)
          
          echo "**Current Status:**" >> $GITHUB_STEP_SUMMARY
          echo "- Sites with high-quality boundaries: $high_quality_count" >> $GITHUB_STEP_SUMMARY
          echo "- Sites with medium-quality boundaries: $medium_quality_count" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.git-check.outputs.changes }}" == "true" ]; then
            echo "📝 Changes were committed and pushed to the repository" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ No changes detected - all boundaries are up to date" >> $GITHUB_STEP_SUMMARY
          fi
